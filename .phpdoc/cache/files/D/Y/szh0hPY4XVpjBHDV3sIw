1723816595
waR3U4bTeM%3A856372180ef3b2c24cc094d2dfb546b1-9c2937b571236d53b122a45ef8752d8b
s:17576:"O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"9c2937b571236d53b122a45ef8752d8b";s:39:" phpDocumentor\Reflection\Php\File name";s:16:"url_matcher5.php";s:39:" phpDocumentor\Reflection\Php\File path";s:91:"vendor/symfony/symfony/src/Symfony/Component/Routing/Tests/Fixtures/dumper/url_matcher5.php";s:41:" phpDocumentor\Reflection\Php\File source";s:6915:"<?php

use Symfony\Component\Routing\Exception\MethodNotAllowedException;
use Symfony\Component\Routing\Exception\ResourceNotFoundException;
use Symfony\Component\Routing\RequestContext;

/**
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class ProjectUrlMatcher extends Symfony\Component\Routing\Tests\Fixtures\RedirectableUrlMatcher
{
    public function __construct(RequestContext $context)
    {
        $this->context = $context;
    }

    public function match($rawPathinfo)
    {
        $allow = [];
        $pathinfo = rawurldecode($rawPathinfo);
        $trimmedPathinfo = rtrim($pathinfo, '/');
        $context = $this->context;
        $request = $this->request ?: $this->createRequest($pathinfo);
        $requestMethod = $canonicalMethod = $context->getMethod();

        if ('HEAD' === $requestMethod) {
            $canonicalMethod = 'GET';
        }

        if (0 === strpos($pathinfo, '/a')) {
            // a_first
            if ('/a/11' === $pathinfo) {
                return ['_route' => 'a_first'];
            }

            // a_second
            if ('/a/22' === $pathinfo) {
                return ['_route' => 'a_second'];
            }

            // a_third
            if ('/a/333' === $pathinfo) {
                return ['_route' => 'a_third'];
            }

        }

        // a_wildcard
        if (preg_match('#^/(?P<param>[^/]++)$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, ['_route' => 'a_wildcard']), array ());
        }

        if (0 === strpos($pathinfo, '/a')) {
            // a_fourth
            if ('/a/44' === $trimmedPathinfo) {
                $ret = ['_route' => 'a_fourth'];
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif ('GET' !== $canonicalMethod) {
                    goto not_a_fourth;
                } else {
                    return array_replace($ret, $this->redirect($rawPathinfo.'/', 'a_fourth'));
                }

                return $ret;
            }
            not_a_fourth:

            // a_fifth
            if ('/a/55' === $trimmedPathinfo) {
                $ret = ['_route' => 'a_fifth'];
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif ('GET' !== $canonicalMethod) {
                    goto not_a_fifth;
                } else {
                    return array_replace($ret, $this->redirect($rawPathinfo.'/', 'a_fifth'));
                }

                return $ret;
            }
            not_a_fifth:

            // a_sixth
            if ('/a/66' === $trimmedPathinfo) {
                $ret = ['_route' => 'a_sixth'];
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif ('GET' !== $canonicalMethod) {
                    goto not_a_sixth;
                } else {
                    return array_replace($ret, $this->redirect($rawPathinfo.'/', 'a_sixth'));
                }

                return $ret;
            }
            not_a_sixth:

        }

        // nested_wildcard
        if (0 === strpos($pathinfo, '/nested') && preg_match('#^/nested/(?P<param>[^/]++)$#sD', $pathinfo, $matches)) {
            return $this->mergeDefaults(array_replace($matches, ['_route' => 'nested_wildcard']), array ());
        }

        if (0 === strpos($pathinfo, '/nested/group')) {
            // nested_a
            if ('/nested/group/a' === $trimmedPathinfo) {
                $ret = ['_route' => 'nested_a'];
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif ('GET' !== $canonicalMethod) {
                    goto not_nested_a;
                } else {
                    return array_replace($ret, $this->redirect($rawPathinfo.'/', 'nested_a'));
                }

                return $ret;
            }
            not_nested_a:

            // nested_b
            if ('/nested/group/b' === $trimmedPathinfo) {
                $ret = ['_route' => 'nested_b'];
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif ('GET' !== $canonicalMethod) {
                    goto not_nested_b;
                } else {
                    return array_replace($ret, $this->redirect($rawPathinfo.'/', 'nested_b'));
                }

                return $ret;
            }
            not_nested_b:

            // nested_c
            if ('/nested/group/c' === $trimmedPathinfo) {
                $ret = ['_route' => 'nested_c'];
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif ('GET' !== $canonicalMethod) {
                    goto not_nested_c;
                } else {
                    return array_replace($ret, $this->redirect($rawPathinfo.'/', 'nested_c'));
                }

                return $ret;
            }
            not_nested_c:

        }

        elseif (0 === strpos($pathinfo, '/slashed/group')) {
            // slashed_a
            if ('/slashed/group' === $trimmedPathinfo) {
                $ret = ['_route' => 'slashed_a'];
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif ('GET' !== $canonicalMethod) {
                    goto not_slashed_a;
                } else {
                    return array_replace($ret, $this->redirect($rawPathinfo.'/', 'slashed_a'));
                }

                return $ret;
            }
            not_slashed_a:

            // slashed_b
            if ('/slashed/group/b' === $trimmedPathinfo) {
                $ret = ['_route' => 'slashed_b'];
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif ('GET' !== $canonicalMethod) {
                    goto not_slashed_b;
                } else {
                    return array_replace($ret, $this->redirect($rawPathinfo.'/', 'slashed_b'));
                }

                return $ret;
            }
            not_slashed_b:

            // slashed_c
            if ('/slashed/group/c' === $trimmedPathinfo) {
                $ret = ['_route' => 'slashed_c'];
                if ('/' === substr($pathinfo, -1)) {
                    // no-op
                } elseif ('GET' !== $canonicalMethod) {
                    goto not_slashed_c;
                } else {
                    return array_replace($ret, $this->redirect($rawPathinfo.'/', 'slashed_c'));
                }

                return $ret;
            }
            not_slashed_c:

        }

        if ('/' === $pathinfo && !$allow) {
            throw new Symfony\Component\Routing\Exception\NoConfigurationException();
        }

        throw 0 < count($allow) ? new MethodNotAllowedException(array_unique($allow)) : new ResourceNotFoundException();
    }
}
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:18:"\ProjectUrlMatcher";O:35:"phpDocumentor\Reflection\Php\Class_":11:{s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:18:"\ProjectUrlMatcher";s:36:" phpDocumentor\Reflection\Fqsen name";s:17:"ProjectUrlMatcher";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:68:"This class has been auto-generated
by the Symfony Routing Component.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:64:"\Symfony\Component\Routing\Tests\Fixtures\RedirectableUrlMatcher";s:36:" phpDocumentor\Reflection\Fqsen name";s:22:"RedirectableUrlMatcher";}s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:0:{}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:2:{s:33:"\ProjectUrlMatcher::__construct()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:33:"\ProjectUrlMatcher::__construct()";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"__construct";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"context";s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:41:"\Symfony\Component\Routing\RequestContext";s:36:" phpDocumentor\Reflection\Fqsen name";s:14:"RequestContext";}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:13;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:27:"\ProjectUrlMatcher::match()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:27:"\ProjectUrlMatcher::match()";s:36:" phpDocumentor\Reflection\Fqsen name";s:5:"match";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:11:"rawPathinfo";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:18;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:11;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}";